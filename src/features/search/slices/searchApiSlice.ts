import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';
import type { DetailsQuery, DetailsResult, SearchQuery, SearchResultPage } from '~features/search/searchTypes';

const apiKey = 'eb143593';

/**
 * A redux toolkit API slice that is used to fetch the Movie. The getMovieByName endpoint
 * is used by the Search Page. The getMovieById endpoint is used by the Movie Details component
 * and fetches the movie based on its unique imdb ID.
 */
export const searchApiSlice = createApi({
    reducerPath: 'searchApi',
    baseQuery: fetchBaseQuery({ baseUrl: 'https://www.omdbapi.com/' }),
    endpoints: (build) => ({
        getInfiniteItemsByName: build.infiniteQuery<SearchResultPage[], SearchQuery, number>({
            infiniteQueryOptions: {
                initialPageParam: 1,
                maxPages: 3,
                getNextPageParam: (lastPage, allPages, lastPageParam, allPageParams, queryArg) => lastPageParam + 1
            },
            // The `query` function receives `{queryArg, pageParam}` as its argument
            query({ queryArg, pageParam }) {
                return `?t=${pageParam}&apikey=${apiKey}`;
            }
        }),
        getItemDetails: build.query<DetailsResult, DetailsQuery>({
            query: (queryArg) => `?t=${queryArg.imdbID}&apikey=${apiKey}`
        })
    })
});

// Hooks are automatically generated by redux toolkit based on the endpoint names
export const { useGetInfiniteItemsByNameInfiniteQuery, useGetItemDetailsQuery } = searchApiSlice;
